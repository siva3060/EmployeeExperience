spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.jdbc-url=jdbc:postgresql://localhost:5433/ivrauto
spring.datasource.username=postgres
spring.datasource.password=NithPrasAkhiNith2727

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Ngrok mock server
ngrok.domain=http://e8b7472c.ngrok.io

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.use_sql_comments=false

#Disable batch job's auto start
spring.batch.job.enabled=true
spring.batch.initialize-schema=always
spring.main.banner-mode=off

spring.main.allow-bean-definition-overriding=true

import.data.csv.file=src/main/resources/import/candidates.csv
import.data.csv.cron=0 0/5 * ? * *

twilio.account.sid=<account sid goes here>
twilio.auth.token=<auth token goes here>
twilio.number=+16673031623

# Access the database through browser using H2
# spring.h2.console.enabled=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# spring.datasource.jdbc-url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS H2\\;SET SCHEMA H2
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.user=ivr
# spring.jpa.database-platform=org.hibernate.dialect.h2dialect

# Hibernate properties
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=false