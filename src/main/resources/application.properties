spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.jdbc-url=jdbc:postgresql://15.188.74.126:5432/sree
spring.datasource.username=postgres
spring.datasource.password=securep@sshere

# used for local testing)
#spring.datasource.jdbc-url=jdbc:postgresql://localhost:5433/sree
#spring.datasource.password=NithPrasAkhiNith2727

server.port=8086

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Ngrok mock server (used for local testing)
ngrok.domain=http://5ccf1f63.ngrok.io
# AWS Instance
aws.instance=http://15.188.74.126:8086

# FlexiQuiz API key
flexiquiz.api.key=ded5ea2122b935413d0799789594c1e2
flexiquiz.api.baseurl=https://www.flexiquiz.com/api
flexiquiz.website=https://www.flexiquiz.com

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.use_sql_comments=false

#Disable batch job's auto start
spring.batch.job.enabled=true
spring.batch.initialize-schema=always
spring.main.banner-mode=off

spring.main.allow-bean-definition-overriding=true

import.data.screening.file=EmployeeExperience-1.0-SNAPSHOT/WEB-INF/classes/import/screening.json
import.data.candidates.csv.file=EmployeeExperience-1.0-SNAPSHOT/WEB-INF/classes/import/candidates.csv
import.data.poc.csv.file=EmployeeExperience-1.0-SNAPSHOT/WEB-INF/classes/import/poc.csv
import.data.interaction.csv.file=src/main/resources/import/interaction.csv
import.data.interviewlevel.csv.file=src/main/resources/import/interviewlevel.csv
import.data.skilltype.csv.file=src/main/resources/import/skilltype.csv
import.data.csv.cron=0 0/5 * ? * *

# trial account
#twilio.account.sid=AC5c7443793e99cc0d7a9492b29230e75b
#twilio.auth.token=c3c935231e554c20685ff1e2bfc1896d#
#twilio.number=+16673031623

# premium account
twilio.account.sid=AC69d43628dc7eec2135b4ca491cd27fd0
twilio.auth.token=2b952b9bd887e21eb05873fdee9da3cf
twilio.number=+12029372274

# Access the database through browser using H2
# spring.h2.console.enabled=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# spring.datasource.jdbc-url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS H2\\;SET SCHEMA H2
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.user=ivr
# spring.jpa.database-platform=org.hibernate.dialect.h2dialect

# Hibernate properties
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=false